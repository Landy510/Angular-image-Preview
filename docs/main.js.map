{"version":3,"sources":["./src/app/file/file.module.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/api/files.service.ts","./src/app/file/file.component.html","./src/app/file/file.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FileComponent } from './file.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\n@NgModule({\n  declarations: [FileComponent],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatProgressBarModule,\n    MatIconModule\n  ],\n  exports: [\n    FileComponent\n  ]\n})\nexport class FileModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'fileUpload';\n}\n","<app-file></app-file>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule }   from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { FileModule } from './file/file.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FileModule,\n    FormsModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilesService {\n  baseUrl = 'http://localhost:3000/'\n  constructor(private http: HttpClient) { }\n\n  getFiles(): Observable<any> {\n    return this.http.get(this.baseUrl + 'author');\n  }\n\n  uploadFiles(queryParam: any): Observable<any> {\n    return this.http.post(this.baseUrl + 'author', queryParam, { reportProgress: true, observe: 'events'})\n  }\n\n  deleteFile(id:string): Observable<any> {\n    return this.http.delete(this.baseUrl + 'author/' + id);\n  }\n}\n","<div class=\"container\">\n  <input\n    type=\"file\"\n    accept=\"image/*\"\n    class=\"file-input\"\n    (change)=\"onFileSelected($event)\"\n    #fileUpload\n  >\n  <div class=\"file-upload\">\n    <div>\n      <p>{{ fileName || \"No file uploaded yet.\" }}</p>\n      <div class=\"image-preview\">\n        <img [src]=\"filePath\">\n      </div>\n    </div>\n\n\n    <button\n      type=\"button\"\n      mat-mini-fab\n      color=\"primary\"\n      aria-label=\"Example icon button with a bookmark icon\"\n      (click)=\"fileUpload.click()\"\n    >\n      <mat-icon>attach_file</mat-icon>\n    </button>\n  </div>\n\n\n  <button\n    type=\"button\"\n    (click)=\"upload()\"\n    [disabled]=\"targetFile.type === ''\"\n  >post</button>\n\n  <button\n    type=\"button\"\n    (click)=\"onGetFilesClick()\"\n  >get</button>\n\n  <button\n    type=\"button\"\n    (click)=\"onDeleteFileClick(deleteId.value)\"\n  >delete</button>\n\n  <input\n    type=\"text\"\n    #deleteId\n    (keyup.enter)=\"onDeleteFileClick(deleteId.value)\"\n  >\n  <table class=\"mt-1\">\n    <thead>\n      <tr>\n        <th class=\"th-id\">id</th>\n        <th class=\"th-name\">name</th>\n        <th class=\"th-type\">type</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let item of dataList\">\n        <td >\n          {{item.id }}\n        </td>\n        <td class=\"overflow-ellipsis\">\n          {{item.name }}\n        </td>\n        <td class=\"file-type overflow-ellipsis\">\n          {{item.type }}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FilesService } from '../../api/files.service';\n@Component({\n  selector: 'app-file',\n  templateUrl: './file.component.html',\n  styleUrls: ['./file.component.css']\n})\nexport class FileComponent implements OnInit {\n  fileName = '';\n\n  filePath = '';\n\n  targetFile = {\n    type: '',\n    name: ''\n  }\n\n  dataList: Array<any> = [];\n\n  uploadProgress: number;\n\n  constructor(private filesService: FilesService) { }\n\n  ngOnInit(): void {\n  }\n\n  onGetFilesClick(): void {\n    this.filesService.getFiles()\n      .subscribe(res => {\n        this.dataList = res;\n      })\n  }\n\n  upload(): void {\n    this.filesService.uploadFiles(this.targetFile)\n      .subscribe(() => {\n        this.onGetFilesClick();\n        this.filePath = '';\n      })\n  }\n\n  onFileSelected(event:any): void {\n    const file:File = event.target.files[0];\n    if(file) {\n      this.fileName = file.name;\n      this.targetFile = {\n        type: file.type,\n        name: file.name\n      }\n\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.filePath = reader.result as string;\n      }\n      reader.readAsDataURL(file);\n    }\n  }\n\n  onDeleteFileClick(id:string):void {\n    this.filesService.deleteFile(id)\n      .subscribe(() => {\n        this.onGetFilesClick();\n      })\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}